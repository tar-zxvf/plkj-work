* daily-todo.org
* <2016-01-30 Sat 08:56>
** 自己：(确定一下每天记的格式)
*** DONE 确定 PyCharm 怎么调试
CLOSED: [2016-01-30 Sat 10:02]
- State "DONE"       from "TODO"       [2016-01-30 Sat 10:02]
**** 在 debug 的设置里，更改用的 setting_local 文件
*** TODO 找晓涛聊一聊……
- 聊什么: 几个问题
  - 项目怎么才能做的快？自己想能否每个大的功能点，拿半个小时左右讲一讲，
    - 讲代码中的功能难点，分享怎么解决实现的代码，
    - 这个项目中的所有人都讲，包括前/后端
    - 向晓涛学习，以前的公司是怎么处理这个事情的。
    - 讲的好处: 熟悉项目，用到的技术有共通
    - 自己在写代码水平上的进步？
  - 每隔几个星期，让晓涛打个分，给点建议，每段时间都要有进步，毕竟自己要进步
    - 同时也可以知道自己在别人眼中是个什么样子，
    - 就是应该要有明面上的竞争，才会有进步，就应该这个样子
  - 就先这些，应该足够了，就是两个角度，工作、个人。
*** TODO 聊完之后，回来看代码，要能自己立刻上手，不然重新写注释
*** TODO 自己尝试一下 git,尝试一下自己拉个分支，只做一个新功能，期间可以有多
*** TODO 找一下 mac 的相关好用工具，最基本的是命令行窗口的管理工具，及快捷键设置
*** TODO 把 git、百度同步盘的环境搭起来，第一目标是实现公司 mac 与家中 windows 的共同协作
** 工作：
*** TODO 更新 code,从头到尾运行一下，确定一下功能
*** TODO 确定功能定义开始做,每天早上做最重要的事，
*** TODO 重要的不是要有想法，是要有切实可行的东西，或者说已经实现了的东西
* <2016-01-30 Sat 18:19>
** 自己:
*** 完成工作，然后自己开始做上面的事，
*** 自己准备一下回家要作什么，写清楚
** 工作:
*** TODO 完成渗透率功能，先确定定义，再一点一点做，再回头看一下自己的代码，重要的是理解思路
- State "TODO"       from "DONE"       [2016-02-01 Mon 17:16]
- State "DONE"       from "TODO"       [2016-02-01 Mon 17:15]
- 重新确定了一下思路，这个要好好看看
*** TODO 明天学着写文档
**  今天晚上:
*** DONE 整理好 QQ 浏览器的标签的事，做好同步
CLOSED: [2016-01-31 Sun 18:42]
- State "DONE"       from "TODO"       [2016-01-31 Sun 18:42]
- 渐渐习惯用 git 做好收藏标签的同步，不要用收藏夹，搜索分类功能当然不如 spacemacs 强大，
*** DONE 看怎么从 windows 到 mac,做好笔记
CLOSED: [2016-02-01 Mon 17:15]
- State "DONE"       from "TODO"       [2016-02-01 Mon 17:15]
- 每个软件都要做好记录
*** DONE QQ 浏览器打开太多的标签，本质上是问题太多，做好问题的记录
CLOSED: [2016-02-01 Mon 17:14]
- State "DONE"       from "TODO"       [2016-02-01 Mon 17:14]
- 问题要记好，最好要有例子，结构清晰
* <2016-02-01 Mon 17:17>
** 工作：
*** 做好交接工作，做好记录
*** 写完文档，要学习怎么写测试
*** 仔细确定接到一下项目要做好的方方面面
* <2016-02-02 Tue 09:20>
** DONE 上传数据
CLOSED: [2016-02-02 Tue 10:34]
- State "DONE"       from "TODO"       [2016-02-02 Tue 10:34]
**** TODO - ssh 保持长时间链接的方法
** DONE 学习写文档
CLOSED: [2016-02-02 Tue 10:32]
- State "DONE"       from "TODO"       [2016-02-02 Tue 10:32]
+ liubin 写，但是自己应该也要会写，所以 todo 变为
**** TODO 阅读要写的文档
** 在 windows 上安装 linux 虚拟机的想法：
- 安装 ubuntu 桌面版
- 主要用来折腾命令行相关、当 windows 下设置有问题时，虚拟机做个备选，
- 在 window 主机上开发，服务什么都连在 linux 上，如果还不行，只能在 linux 上了。
- 浏览器，IDE 什么的，尽量不要在 linux 上跑，除非不卡
- 安装 spacemacs,生活在 emacs 中，安装桌面版，是为了体验一些桌面版的工具
- 只做体验两个平台的功能，不要安 mac,太卡，没意思。
- 工具，快速上手，能用。优化有时间，可提高效率再做，没必要一开始就那么纠结
- ok
* 回家：
- Sql: 存储数据是有类型的。。
  - Join,Left join, right join,和直接从两个表的选择有什么具体的差别
  - group by having, 自己练熟
  - 和日期计算相关的函数，dateadd, datediff, month, year
- pandas
  - Series, DataFrame,有什么操作，要熟悉一下
- Django Test
- Django
*** TODO 阅读 Flask 的源代码看看，看不懂再说
** 关键是学习能力，自己构建一个系统，自己做过、学过的东西能够成为一个系统
- 算法还是最硬的基础
